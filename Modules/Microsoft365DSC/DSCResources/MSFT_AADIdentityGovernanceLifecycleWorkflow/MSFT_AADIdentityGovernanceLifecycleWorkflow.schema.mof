[ClassVersion("1.0.0")]
class MSFT_IdentityGovernanceScope
{
    [Write, Description("The @odata.type for the Scope.")] String OdataType;
    [Write, Description("The rule associated with the Scope.")] String Rule;
};

[ClassVersion("1.0.0")]
class MSFT_IdentityGovernanceTrigger
{
    [Write, Description("The @odata.type for the Trigger.")] String OdataType;
    [Write, Description("The time-based attribute for the Trigger.")] String TimeBasedAttribute;
    [Write, Description("The offset in days for the Trigger.")] SInt32 OffsetInDays;
};

[ClassVersion("1.0.0")]
class MSFT_IdentityGovernanceWorkflowExecutionConditions
{
    [Write, Description("The @odata.type for the Workflow Execution Conditions.")] String OdataType;
    [Write, Description("The scope for the Workflow Execution Conditions."), EmbeddedInstance("MSFT_IdentityGovernanceScope")] String ScopeValue;
    [Write, Description("The trigger for the Workflow Execution Conditions."), EmbeddedInstance("MSFT_IdentityGovernanceTrigger")] String TriggerValue;
};

[ClassVersion("1.0.0")]
class MSFT_AADIdentityGovernanceTaskArguments
{
    [Key, Description("The name of the key")] String Name;
    [Write, Description("The value associated with the key")] String Value;
};

[ClassVersion("1.0.0")]
class MSFT_AADIdentityGovernanceTask
{
    [Write, Description("Specifies the display name of the Workflow Task")] String DisplayName;
    [Write, Description("Description of the Workflow Task")] String Description;
    [Write, Description("Category of the Workflow Task")] String Category;
    [Write, Description("Indicates if the Workflow Task is enabled or not")] Boolean IsEnabled;
    [Write, Description("The sequence in which the task is executed")] SInt32 ExecutionSequence;
    [Write, Description("Specifies whether the task should continue on error")] Boolean ContinueOnError;
    [Write, Description("ID of the task definition associated with this Workflow Task")] String TaskDefinitionId;
    [Write, Description("Arguments for the Workflow Task"), EmbeddedInstance("MSFT_AADIdentityGovernanceTaskArguments")] String Arguments[];
};

[ClassVersion("1.0.0.0"), FriendlyName("AADIdentityGovernanceLifecycleWorkflow")]
class MSFT_AADIdentityGovernanceLifecycleWorkflow : OMI_BaseResource
{
    [Key, Description("Specifies the Display Name of the Workflow")] String DisplayName;
    [Write, Description("Description of the Workflow")] String Description;
    [Write, Description("Category of the Workflow")] String Category;
    [Write, Description("Indicates if the Workflow is enabled")] Boolean IsEnabled;
    [Write, Description("Indicates if scheduling is enabled for the Workflow")] Boolean IsSchedulingEnabled;
    [Write, Description("Tasks associated with this workflow"), EmbeddedInstance("MSFT_AADIdentityGovernanceTask")] String Tasks[];
    [Write, Description("ExecutionConditions for this workflow"), EmbeddedInstance("MSFT_IdentityGovernanceWorkflowExecutionConditions")] String ExecutionConditions;

    [Write, Description("Present ensures the instance exists, absent ensures it is removed."), ValueMap{"Absent","Present"}, Values{"Absent","Present"}] string Ensure;
    [Write, Description("Credentials of the workload's Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
