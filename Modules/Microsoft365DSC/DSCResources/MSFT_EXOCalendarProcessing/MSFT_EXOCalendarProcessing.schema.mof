[ClassVersion("1.0.0.0"), FriendlyName("EXOCalendarProcessing")]
class MSFT_EXOCalendarProcessing : OMI_BaseResource
{
    [Key, Description("The Identity parameter specifies the resource mailbox that you want to view. You can use any value that uniquely identifies the mailbox.")] String Identity;
    [Write, Description("The AddAdditionalResponse parameter specifies whether additional information (the value of the AdditionalResponse parameter) is added to meeting request responses")] Boolean AddAdditionalResponse;
    [Write, Description("The AdditionalResponse parameter specifies the additional information to be included in responses to meeting requests when the value of the AddAdditionalResponse parameter is $true. If the value contains spaces, enclose the value in quotation marks.")] String AdditionalResponse;
    [Write, Description("The AddNewRequestsTentatively parameter specifies whether new meeting requests are added to the calendar as tentative")] Boolean AddNewRequestsTentatively;
    [Write, Description("The AddOrganizerToSubject parameter specifies whether the meeting organizer's name is used as the subject of the meeting request.")] Boolean AddOrganizerToSubject;
    [Write, Description("The AllBookInPolicy parameter specifies whether to automatically approve in-policy requests from all users to the resource mailbox.")] Boolean AllBookInPolicy;
    [Write, Description("The AllowConflicts parameter specifies whether to allow conflicting meeting requests.")] Boolean AllowConflicts;
    [Write, Description("The AllowRecurringMeetings parameter specifies whether to allow recurring meetings in meeting requests.")] Boolean AllowRecurringMeetings;
    [Write, Description("The AllRequestInPolicy parameter specifies whether to allow all users to submit in-policy requests to the resource mailbox.")] Boolean AllRequestInPolicy;
    [Write, Description("The AllRequestOutOfPolicy parameter specifies whether to allow all users to submit out-of-policy requests to the resource mailbox.")] Boolean AllRequestOutOfPolicy;
    [Write, Description("The AutomateProcessing parameter enables or disables calendar processing on the mailbox."), ValueMap{"None","AutoUpdate","AutoAccept"}, Values{"None","AutoUpdate","AutoAccept"}] String AutomateProcessing;
    [Write, Description("The BookingType parameter specifies how reservations work on the resource mailbox."), ValueMap{"Standard","Reserved"}, Values{"Standard","Reserved"}] String BookingType;
    [Write, Description("The BookingWindowInDays parameter specifies the maximum number of days in advance that the resource can be reserved. A valid value is an integer from 0 through 1080. The default value is 180 days. The value 0 means today.")] UInt32 BookingWindowInDays;
    [Write, Description("The BookInPolicy parameter specifies users or groups who are allowed to submit in-policy meeting requests to the resource mailbox that are automatically approved. You can use any value that uniquely identifies the user or group.")] String BookInPolicy[];
    [Write, Description("The ConflictPercentageAllowed parameter specifies the maximum percentage of meeting conflicts for new recurring meeting requests. A valid value is an integer from 0 through 100. The default value is 0.")] UInt32 ConflictPercentageAllowed;
    [Write, Description("The DeleteAttachments parameter specifies whether to remove attachments from all incoming messages.")] Boolean DeleteAttachments;
    [Write, Description("The DeleteComments parameter specifies whether to remove or keep any text in the message body of incoming meeting requests.")] Boolean DeleteComments;
    [Write, Description("The DeleteNonCalendarItems parameter specifies whether to remove or keep all non-calendar-related messages that are received by the resource mailbox.")] Boolean DeleteNonCalendarItems;
    [Write, Description("The DeleteSubject parameter specifies whether to remove or keep the subject of incoming meeting requests. ")] Boolean DeleteSubject;
    [Write, Description("N/A")] Boolean EnableAutoRelease;
    [Write, Description("The EnableResponseDetails parameter specifies whether to include the reasons for accepting or declining a meeting in the response email message.")] Boolean EnableResponseDetails;
    [Write, Description("The EnforceCapacity parameter specifies whether to restrict the number of attendees to the capacity of the workspace. For example, if capacity is set to 10, then only 10 people can book the workspace.")] Boolean EnforceCapacity;
    [Write, Description("The EnforceSchedulingHorizon parameter controls the behavior of recurring meetings that extend beyond the date specified by the BookingWindowInDays parameter.")] Boolean EnforceSchedulingHorizon;
    [Write, Description("The ForwardRequestsToDelegates parameter specifies whether to forward incoming meeting requests to the delegates that are configured for the resource mailbox.")] Boolean ForwardRequestsToDelegates;
    [Write, Description("The MaximumConflictInstances parameter specifies the maximum number of conflicts for new recurring meeting requests when the AllowRecurringMeetings parameter is set to $true. A valid value is an integer from 0 through INT32 (2147483647). The default value is 0.")] UInt32 MaximumConflictInstances;
    [Write, Description("The MaximumDurationInMinutes parameter specifies the maximum duration in minutes for meeting requests. A valid value is an integer from 0 through INT32 (2147483647). The default value is 1440 (24 hours).")] UInt32 MaximumDurationInMinutes;
    [Write, Description("The MinimumDurationInMinutes parameter specifies the minimum duration in minutes for meeting requests in workspace mailboxes. A valid value is an integer from 0 through INT32 (2147483647). The default value is 0, which means there is no minimum duration.")] UInt32 MinimumDurationInMinutes;
    [Write, Description("The OrganizerInfo parameter specifies whether the resource mailbox sends organizer information when a meeting request is declined because of conflicts.")] Boolean OrganizerInfo;
    [Write, Description("N/A")] UInt32 PostReservationMaxClaimTimeInMinutes;
    [Write, Description("The ProcessExternalMeetingMessages parameter specifies whether to process meeting requests that originate outside the Exchange organization.")] Boolean ProcessExternalMeetingMessages;
    [Write, Description("The RemoveCanceledMeetings parameter specifies whether to automatically delete meetings that were cancelled by the organizer from the resource mailbox's calendar. ")] Boolean RemoveCanceledMeetings;
    [Write, Description("The RemoveForwardedMeetingNotifications parameter specifies whether forwarded meeting notifications are moved to the Deleted Items folder after they're processed by the Calendar Attendant. ")] Boolean RemoveForwardedMeetingNotifications;
    [Write, Description("The RemoveOldMeetingMessages parameter specifies whether the Calendar Attendant removes old and redundant updates and responses.")] Boolean RemoveOldMeetingMessages;
    [Write, Description("The RemovePrivateProperty parameter specifies whether to clear the private flag for incoming meetings that were sent by the organizer in the original requests. ")] Boolean RemovePrivateProperty;
    [Write, Description("The RemovePrivateProperty parameter specifies whether to clear the private flag for incoming meetings that were sent by the organizer in the original requests. ")] String RequestInPolicy[];
    [Write, Description("The RequestOutOfPolicy parameter specifies users who are allowed to submit out-of-policy requests that require approval by a resource mailbox delegate. You can use any value that uniquely identifies the user. ")] String RequestOutOfPolicy[];
    [Write, Description("The ResourceDelegates parameter specifies users can approve or reject requests that are sent to the resource mailbox. You can use any value that uniquely identifies the user. ")] String ResourceDelegates[];
    [Write, Description("The ScheduleOnlyDuringWorkHours parameter specifies whether to allow meetings to be scheduled outside of the working hours that are defined for the resource mailbox.")] Boolean ScheduleOnlyDuringWorkHours;
    [Write, Description("The TentativePendingApproval parameter specifies whether to mark pending requests as tentative on the calendar.")] Boolean TentativePendingApproval;[Write, Description("Credentials of the Exchange Global Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Determines wether or not the instance exist."), ValueMap{"Present"}, Values{"Present"}] String Ensure;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Username can be made up to anything but password will be used for CertificatePassword"), EmbeddedInstance("MSFT_Credential")] String CertificatePassword;
    [Write, Description("Path to certificate used in service principal usually a PFX file.")] String CertificatePath;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
