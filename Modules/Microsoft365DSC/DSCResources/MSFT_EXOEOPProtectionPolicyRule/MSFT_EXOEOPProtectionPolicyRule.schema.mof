[ClassVersion("1.0.0.0"), FriendlyName("EXOEOPProtectionPolicyRule")]
class MSFT_EXOEOPProtectionPolicyRule : OMI_BaseResource
{
    [Write, Description("The Comments parameter specifies informative comments for the rule, such as what the rule is used for or how it has changed over time. The length of the comment can't exceed 1024 characters.")] String Comments;
    [Write, Description("The ExceptIfRecipientDomainIs parameter specifies an exception that looks for recipients with email addresses in the specified domains. You can specify multiple domains separated by commas.")] String ExceptIfRecipientDomainIs[];
    [Write, Description("The ExceptIfSentTo parameter specifies an exception that looks for recipients in messages. You can use any value that uniquely identifies the recipient.")] String ExceptIfSentTo[];
    [Write, Description("The ExceptIfSentToMemberOf parameter specifies an exception that looks for messages sent to members of groups. You can use any value that uniquely identifies the group.")] String ExceptIfSentToMemberOf[];
    [Key, Description("The Identity parameter specifies the rule that you want to view. You can use any value that uniquely identifies the rule. ")] String Identity;
    [Write, Description("This parameter defin if the rule is enabled or disabled")] String State;
    [Write, Description("The Name parameter specifies a unique name for the rule. The maximum length is 64 characters.")] String Name;
    [Write, Description("The Priority parameter specifies a priority value for the rule that determines the order of rule processing. A lower integer value indicates a higher priority, the value 0 is the highest priority, and rules can't have the same priority value.")] UInt32 Priority;
    [Write, Description("The RecipientDomainIs parameter specifies a condition that looks for recipients with email addresses in the specified domains. You can specify multiple domains separated by commas.")] String RecipientDomainIs[];
    [Write, Description("The SentTo parameter specifies a condition that looks for recipients in messages. You can use any value that uniquely identifies the recipient.")] String SentTo[];
    [Write, Description("The SentToMemberOf parameter specifies a condition that looks for messages sent to members of distribution groups, dynamic distribution groups, or mail-enabled security groups. You can use any value that uniquely identifies the group.")] String SentToMemberOf[];
    [Write, Description("Present ensures the instance exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the workload's Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
};
