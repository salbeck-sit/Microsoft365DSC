[ClassVersion("1.0.0.0"), FriendlyName("EXOMailContact")]
class MSFT_EXOMailContact : OMI_BaseResource
{
    [Key, Description("The Name parameter specifies a unique name for the mail contact.")] String Name;
    [Required, Description("The ExternalEmailAddress parameter specifies the target email address of the mail contact or mail user. By default, this value is used as the primary email address of the mail contact or mail user.")] String ExternalEmailAddress;
    [Write, Description("The Alias parameter specifies the Exchange alias (also known as the mail nickname) for the recipient. This value identifies the recipient as a mail-enabled object, and shouldn't be confused with multiple email addresses for the same recipient (also known as proxy addresses). A recipient can have only one Alias value. The maximum length is 64 characters.")] String Alias;
    [Write, Description("The DisplayName parameter specifies the display name of the mail contact. The display name is visible in the Exchange admin center and in address lists. ")] String DisplayName;
    [Write, Description("The FirstName parameter specifies the user's first name.")] String FirstName;
    [Write, Description("The Initials parameter specifies the user's middle initials.")] String Initials;
    [Write, Description("The LastName parameter specifies the user's last name.")] String LastName;
    [Write, Description("The MacAttachmentFormat parameter specifies the Apple Macintosh operating system attachment format to use for messages sent to the mail contact or mail user. Valid values are: BinHex, UuEncode, AppleSingle, AppleDouble"), ValueMap{"BinHex","UuEncode","AppleSingle","AppleDouble"}, Values{"BinHex","UuEncode","AppleSingle","AppleDouble"}] String MacAttachmentFormat;
    [Write, Description("The MessageBodyFormat parameter specifies the message body format for messages sent to the mail contact or mail user. Valid values are: Text, Html, TextAndHtml"), ValueMap{"Text","Html","TextAndHtml"}, Values{"Text","Html","TextAndHtml"}] String MessageBodyFormat;
    [Write, Description("The MessageFormat parameter specifies the message format for messages sent to the mail contact or mail user. Valid values are: Mime, Text"), ValueMap{"Mime","Text"}, Values{"Mime","Text"}] String MessageFormat;
    [Write, Description("The ModeratedBy parameter specifies one or more moderators for this mail contact. A moderator approves messages sent to the mail contact before the messages are delivered. A moderator must be a mailbox, mail user, or mail contact in your organization.")] String ModeratedBy[];
    [Write, Description("The ModerationEnabled parameter specifies whether moderation is enabled for this recipient.")] Boolean ModerationEnabled;
    [Write, Description("The OrganizationalUnit parameter specifies the location in Active Directory where the new contact is created.")] String OrganizationalUnit;
    [Write, Description("The SendModerationNotifications parameter specifies when moderation notification messages are sent. Valid values are: ALways, Internal, Never"), ValueMap{"Always","Internal","Never"}, Values{"Always","Internal","Never"}] String SendModerationNotifications;
    [Write, Description("The UsePreferMessageFormat specifies whether the message format settings configured for the mail user or mail contact override the global settings configured for the remote domain or configured by the message sender")] Boolean UsePreferMessageFormat;
    [Write, Description("The CustomAttribute1 parameter specifies the value of the CustomAttribute1")] String CustomAttribute1;
    [Write, Description("The CustomAttribute2 parameter specifies the value of the CustomAttribute2")] String CustomAttribute2;
    [Write, Description("The CustomAttribute3 parameter specifies the value of the CustomAttribute3")] String CustomAttribute3;
    [Write, Description("The CustomAttribute4 parameter specifies the value of the CustomAttribute4")] String CustomAttribute4;
    [Write, Description("The CustomAttribute5 parameter specifies the value of the CustomAttribute5")] String CustomAttribute5;
    [Write, Description("The CustomAttribute6 parameter specifies the value of the CustomAttribute6")] String CustomAttribute6;
    [Write, Description("The CustomAttribute7 parameter specifies the value of the CustomAttribute7")] String CustomAttribute7;
    [Write, Description("The CustomAttribute8 parameter specifies the value of the CustomAttribute8")] String CustomAttribute8;
    [Write, Description("The CustomAttribute9 parameter specifies the value of the CustomAttribute9")] String CustomAttribute9;
    [Write, Description("The CustomAttribute10 parameter specifies the value of the CustomAttribute10")] String CustomAttribute10;
    [Write, Description("The CustomAttribute11 parameter specifies the value of the CustomAttribute11")] String CustomAttribute11;
    [Write, Description("The CustomAttribute12 parameter specifies the value of the CustomAttribute12")] String CustomAttribute12;
    [Write, Description("The CustomAttribute13 parameter specifies the value of the CustomAttribute13")] String CustomAttribute13;
    [Write, Description("The CustomAttribute14 parameter specifies the value of the CustomAttribute14")] String CustomAttribute14;
    [Write, Description("The CustomAttribute15 parameter specifies the value of the CustomAttribute15")] String CustomAttribute15;
    [Write, Description("The ExtensionCustomAttribute1 parameter specifies the value of the ExtensionCustomAttribute1")] String ExtensionCustomAttribute1[];
    [Write, Description("The ExtensionCustomAttribute2 parameter specifies the value of the ExtensionCustomAttribute2")] String ExtensionCustomAttribute2[];
    [Write, Description("The ExtensionCustomAttribute3 parameter specifies the value of the ExtensionCustomAttribute3")] String ExtensionCustomAttribute3[];
    [Write, Description("The ExtensionCustomAttribute4 parameter specifies the value of the ExtensionCustomAttribute4")] String ExtensionCustomAttribute4[];
    [Write, Description("The ExtensionCustomAttribute5 parameter specifies the value of the ExtensionCustomAttribute5")] String ExtensionCustomAttribute5[];
    [Write, Description("Specifies if this Contact should exist."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("Credentials of the Exchange Global Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Username can be made up to anything but password will be used for CertificatePassword"), EmbeddedInstance("MSFT_Credential")] String CertificatePassword;
    [Write, Description("Path to certificate used in service principal usually a PFX file.")] String CertificatePath;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
