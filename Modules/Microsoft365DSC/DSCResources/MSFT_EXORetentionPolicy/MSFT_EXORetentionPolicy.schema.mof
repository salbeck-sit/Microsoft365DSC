[ClassVersion("1.0.0.0"), FriendlyName("EXORetentionPolicy")]  
class MSFT_EXORetentionPolicy : OMI_BaseResource  
{  
    [Key, Description("The Identity parameter specifies the name, distinguished name (DN), or GUID of the retention policy.")] String Identity;  
    [Write, Description("The IsDefault switch specifies that this retention policy is the default retention policy. You don't need to specify a value with this switch.")] Boolean IsDefault;  
    [Write, Description("The IsDefaultArbitrationMailbox switch configures this policy as the default retention policy for arbitration mailboxes in your Exchange Online organization. You don't need to specify a value with this switch.")] Boolean IsDefaultArbitrationMailbox;  
    [Write, Description("The Name parameter specifies a unique name for the retention policy.")] String Name;  
    [Write, Description("The RetentionId parameter specifies the identity of the retention policy to make sure mailboxes moved between two Exchange organizations continue to have the same retention policy applied to them.")] String RetentionId;  
    [Write, Description("The RetentionPolicyTagLinks parameter specifies the identity of retention policy tags to associate with the retention policy. Mailboxes that get a retention policy applied have retention tags linked with that retention policy.")] String RetentionPolicyTagLinks[];  
  

    [Write, Description("Specifies if this report submission rule should exist."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("Credentials of the workload's Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;  
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;  
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;  
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;  
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;  
    [Write, Description("Access token used for authentication.")] String AccessTokens[];  
};  
