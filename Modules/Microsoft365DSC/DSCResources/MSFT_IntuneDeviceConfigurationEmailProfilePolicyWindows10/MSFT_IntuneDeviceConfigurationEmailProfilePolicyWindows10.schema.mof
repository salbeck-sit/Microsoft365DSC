[ClassVersion("1.0.0.0")]
class MSFT_DeviceManagementConfigurationPolicyAssignments
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group Display Name that is the target of the assignment.")] String groupDisplayName;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};

[ClassVersion("1.0.0.0"), FriendlyName("IntuneDeviceConfigurationEmailProfilePolicyWindows10")]
class MSFT_IntuneDeviceConfigurationEmailProfilePolicyWindows10 : OMI_BaseResource
{
    [Write, Description("Account name.")] String AccountName;
    [Write, Description("Duration of email to sync. Possible values are: userDefined, oneDay, threeDays, oneWeek, twoWeeks, oneMonth, unlimited."), ValueMap{"userDefined","oneDay","threeDays","oneWeek","twoWeeks","oneMonth","unlimited"}, Values{"userDefined","oneDay","threeDays","oneWeek","twoWeeks","oneMonth","unlimited"}] String DurationOfEmailToSync;
    [Write, Description("Email attribute that is picked from AAD and injected into this profile before installing on the device. Possible values are: userPrincipalName, primarySmtpAddress."), ValueMap{"userPrincipalName","primarySmtpAddress"}, Values{"userPrincipalName","primarySmtpAddress"}] String EmailAddressSource;
    [Write, Description("Email sync schedule. Possible values are: userDefined, asMessagesArrive, manual, fifteenMinutes, thirtyMinutes, sixtyMinutes, basedOnMyUsage."), ValueMap{"userDefined","asMessagesArrive","manual","fifteenMinutes","thirtyMinutes","sixtyMinutes","basedOnMyUsage"}, Values{"userDefined","asMessagesArrive","manual","fifteenMinutes","thirtyMinutes","sixtyMinutes","basedOnMyUsage"}] String EmailSyncSchedule;
    [Write, Description("Exchange location that (URL) that the native mail app connects to.")] String HostName;
    [Write, Description("Indicates whether or not to use SSL.")] Boolean RequireSsl;
    [Write, Description("Whether or not to sync the calendar.")] Boolean SyncCalendar;
    [Write, Description("Whether or not to sync contacts.")] Boolean SyncContacts;
    [Write, Description("Whether or not to sync tasks.")] Boolean SyncTasks;
    [Write, Description("Custom domain name value used while generating an email profile before installing on the device.")] String CustomDomainName;
    [Write, Description("UserDomainname attribute that is picked from AAD and injected into this profile before installing on the device. Possible values are: fullDomainName, netBiosDomainName."), ValueMap{"fullDomainName","netBiosDomainName"}, Values{"fullDomainName","netBiosDomainName"}] String UserDomainNameSource;
    [Write, Description("Name of the AAD field, that will be used to retrieve UserName for email profile. Possible values are: userPrincipalName, primarySmtpAddress, samAccountName."), ValueMap{"userPrincipalName","primarySmtpAddress","samAccountName"}, Values{"userPrincipalName","primarySmtpAddress","samAccountName"}] String UsernameAADSource;
    [Write, Description("Username attribute that is picked from AAD and injected into this profile before installing on the device. Possible values are: userPrincipalName, primarySmtpAddress."), ValueMap{"userPrincipalName","primarySmtpAddress"}, Values{"userPrincipalName","primarySmtpAddress"}] String UsernameSource;
    [Write, Description("Admin provided description of the Device Configuration.")] String Description;
    [Key, Description("Admin provided name of the device configuration.")] String DisplayName;
    [Write, Description("The unique identifier for an entity. Read-only.")] String Id;
    [Write, Description("Represents the assignment to the Intune policy."), EmbeddedInstance("MSFT_DeviceManagementConfigurationPolicyAssignments")] String Assignments[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
