[ClassVersion("1.0.0.0")]
class MSFT_DeviceManagementConfigurationPolicyAssignments
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group Display Name that is the target of the assignment.")] String groupDisplayName;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};

[ClassVersion("1.0.0.0"), FriendlyName("IntuneDeviceConfigurationWindowsTeamPolicyWindows10")]
class MSFT_IntuneDeviceConfigurationWindowsTeamPolicyWindows10 : OMI_BaseResource
{
    [Write, Description("Indicates whether or not to Block Azure Operational Insights.")] Boolean AzureOperationalInsightsBlockTelemetry;
    [Write, Description("The Azure Operational Insights workspace id.")] String AzureOperationalInsightsWorkspaceId;
    [Write, Description("The Azure Operational Insights Workspace key.")] String AzureOperationalInsightsWorkspaceKey;
    [Write, Description("Specifies whether to automatically launch the Connect app whenever a projection is initiated.")] Boolean ConnectAppBlockAutoLaunch;
    [Write, Description("Indicates whether or not to Block setting a maintenance window for device updates.")] Boolean MaintenanceWindowBlocked;
    [Write, Description("Maintenance window duration for device updates. Valid values 0 to 5")] UInt32 MaintenanceWindowDurationInHours;
    [Write, Description("Maintenance window start time for device updates.")] String MaintenanceWindowStartTime;
    [Write, Description("Indicates whether or not to Block wireless projection.")] Boolean MiracastBlocked;
    [Write, Description("The channel. Possible values are: userDefined, one, two, three, four, five, six, seven, eight, nine, ten, eleven, thirtySix, forty, fortyFour, fortyEight, oneHundredFortyNine, oneHundredFiftyThree, oneHundredFiftySeven, oneHundredSixtyOne, oneHundredSixtyFive."), ValueMap{"userDefined","one","two","three","four","five","six","seven","eight","nine","ten","eleven","thirtySix","forty","fortyFour","fortyEight","oneHundredFortyNine","oneHundredFiftyThree","oneHundredFiftySeven","oneHundredSixtyOne","oneHundredSixtyFive"}, Values{"userDefined","one","two","three","four","five","six","seven","eight","nine","ten","eleven","thirtySix","forty","fortyFour","fortyEight","oneHundredFortyNine","oneHundredFiftyThree","oneHundredFiftySeven","oneHundredSixtyOne","oneHundredSixtyFive"}] String MiracastChannel;
    [Write, Description("Indicates whether or not to require a pin for wireless projection.")] Boolean MiracastRequirePin;
    [Write, Description("Specifies whether to disable the 'My meetings and files' feature in the Start menu, which shows the signed-in user's meetings and files from Office 365.")] Boolean SettingsBlockMyMeetingsAndFiles;
    [Write, Description("Specifies whether to allow the ability to resume a session when the session times out.")] Boolean SettingsBlockSessionResume;
    [Write, Description("Specifies whether to disable auto-populating of the sign-in dialog with invitees from scheduled meetings.")] Boolean SettingsBlockSigninSuggestions;
    [Write, Description("Specifies the default volume value for a new session. Permitted values are 0-100. The default is 45. Valid values 0 to 100")] UInt32 SettingsDefaultVolume;
    [Write, Description("Specifies the number of minutes until the Hub screen turns off.")] UInt32 SettingsScreenTimeoutInMinutes;
    [Write, Description("Specifies the number of minutes until the session times out.")] UInt32 SettingsSessionTimeoutInMinutes;
    [Write, Description("Specifies the number of minutes until the Hub enters sleep mode.")] UInt32 SettingsSleepTimeoutInMinutes;
    [Write, Description("The welcome screen background image URL. The URL must use the HTTPS protocol and return a PNG image.")] String WelcomeScreenBackgroundImageUrl;
    [Write, Description("Indicates whether or not to Block the welcome screen from waking up automatically when someone enters the room.")] Boolean WelcomeScreenBlockAutomaticWakeUp;
    [Write, Description("The welcome screen meeting information shown. Possible values are: userDefined, showOrganizerAndTimeOnly, showOrganizerAndTimeAndSubject."), ValueMap{"userDefined","showOrganizerAndTimeOnly","showOrganizerAndTimeAndSubject"}, Values{"userDefined","showOrganizerAndTimeOnly","showOrganizerAndTimeAndSubject"}] String WelcomeScreenMeetingInformation;
    [Write, Description("Admin provided description of the Device Configuration.")] String Description;
    [Key, Description("Admin provided name of the device configuration.")] String DisplayName;
    [Write, Description("Indicates whether or not the underlying Device Configuration supports the assignment of scope tags. Assigning to the ScopeTags property is not allowed when this value is false and entities will not be visible to scoped users. This occurs for Legacy policies created in Silverlight and can be resolved by deleting and recreating the policy in the Azure Portal. This property is read-only.")] Boolean SupportsScopeTags;
    [Write, Description("The unique identifier for an entity. Read-only.")] String Id;
    [Write, Description("Represents the assignment to the Intune policy."), EmbeddedInstance("MSFT_DeviceManagementConfigurationPolicyAssignments")] String Assignments[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
};
