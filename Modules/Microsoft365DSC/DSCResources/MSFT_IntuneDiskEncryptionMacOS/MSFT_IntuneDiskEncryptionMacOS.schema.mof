[ClassVersion("1.0.0.0")]
class MSFT_DeviceManagementConfigurationPolicyAssignments
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group Display Name that is the target of the assignment.")] String groupDisplayName;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};

[ClassVersion("1.0.0.0"), FriendlyName("IntuneDiskEncryptionMacOS")]
class MSFT_IntuneDiskEncryptionMacOS : OMI_BaseResource
{
    [Write, Description("The user given description")] String Description;
    [Key, Description("Display name of the disk encryption file vault policy for MacOS")] String DisplayName;
    [Write, Description("List of Scope Tags for this Entity instance.")] String RoleScopeTagIds[];
    [Write, Description("The unique identifier for an entity. Read-only.")] String Id;
    [Write, Description("If not already enabled, FileVault will be enabled at the next logout.")] Boolean Enabled;
    [Write, Description("Specify how frequently in months (1-12) the device's personal recovery key will rotate. Range: 1-12")] UInt32 PersonalRecoveryKeyRotationInMonths;
    [Write, Description("Disable the prompt for the user to enable FileVault when they sign out.")] Boolean DisablePromptAtSignOut;
    [Write, Description("Determine which type(s) of recovery key should be generated for this device. Only supported value is 'personalRecoveryKey'. Required, if Enabled is True.")] String SelectedRecoveryKeyTypes[];
    [Write, Description("Defer the prompt until the user signs out. Only True is supported.")] Boolean AllowDeferralUntilSignOut;
    [Write, Description("Number of times allowed to bypass (1-10). Special cases: -1 = Not Configured, 11 = No limit, always prompt. ")] sInt32 NumberOfTimesUserCanIgnore;
    [Write, Description("Hide recovery key.")] Boolean HidePersonalRecoveryKey;
    [Write, Description("Escrow location description of personal recovery key. Required, if Enabled is True.")] String PersonalRecoveryKeyHelpMessage;
    [Write, Description("Represents the assignment to the Intune policy."), EmbeddedInstance("MSFT_DeviceManagementConfigurationPolicyAssignments")] String Assignments[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
