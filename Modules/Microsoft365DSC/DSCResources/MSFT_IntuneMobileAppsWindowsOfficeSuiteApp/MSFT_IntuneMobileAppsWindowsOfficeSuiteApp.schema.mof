class MSFT_DeviceManagementMobileAppAssignment
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget", "#microsoft.graph.mobileAppAssignment"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget", "#microsoft.graph.mobileAppAssignment"}] String dataType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are: none, include, exclude."), ValueMap{"none", "include", "exclude"}, Values{"none", "include", "exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group Display Name that is the target of the assignment.")] String groupDisplayName;
    [Write, Description("Possible values for the install intent chosen by the admin."), ValueMap{"available", "required", "uninstall", "availableWithoutEnrollment"}, Values{"available", "required", "uninstall", "availableWithoutEnrollment"}] String intent;
};

class MSFT_DeviceManagementMimeContent
{
    [Write, Description("Indicates the type of content mime.")] String Type;
    [Write, Description("The Base64 encoded string content.")] String Value;
};

class MSFT_DeviceManagementMobileAppCategory
{
    [Key, Description("The name of the app category.")] String DisplayName;
    [Write, Description("The unique identifier for an entity. Read-only.")] String Id;
};

class MSFT_DeviceManagementMobileAppExcludedApp
{
    [Write, Description("Specifies whether to exclude Microsoft Office Access from the installation.")] Boolean Access;
    [Write, Description("Specifies whether to exclude Microsoft Search (Bing) as the default from the installation.")] Boolean Bing;
    [Write, Description("Specifies whether to exclude Microsoft Office Excel from the installation.")] Boolean Excel;
    [Write, Description("Specifies whether to exclude Microsoft Office OneDrive for Business (Groove) from the installation.")] Boolean Groove;
    [Write, Description("Specifies whether to exclude Microsoft Office InfoPath from the installation.")] Boolean InfoPath;
    [Write, Description("Specifies whether to exclude Microsoft Office Skype for Business (Lync) from the installation.")] Boolean Lync;
    [Write, Description("Specifies whether to exclude Microsoft Office OneDrive from the installation.")] Boolean OneDrive;
    [Write, Description("Specifies whether to exclude Microsoft Office OneNote from the installation.")] Boolean OneNote;
    [Write, Description("Specifies whether to exclude Microsoft Office Outlook from the installation.")] Boolean Outlook;
    [Write, Description("Specifies whether to exclude Microsoft Office PowerPoint from the installation.")] Boolean PowerPoint;
    [Write, Description("Specifies whether to exclude Microsoft Office Publisher from the installation.")] Boolean Publisher;
    [Write, Description("Specifies whether to exclude Microsoft Office SharePoint Designer from the installation.")] Boolean SharePointDesigner;
    [Write, Description("Specifies whether to exclude Microsoft Office Teams from the installation.")] Boolean Teams;
    [Write, Description("Specifies whether to exclude Microsoft Office Visio from the installation.")] Boolean Visio;
    [Write, Description("Specifies whether to exclude Microsoft Office Word from the installation.")] Boolean Word;
};

[ClassVersion("1.0.0"), FriendlyName("IntuneMobileAppsWindowsOfficeSuiteApp")]
class MSFT_IntuneMobileAppsWindowsOfficeSuiteApp : OMI_BaseResource
{
    [Key, Description("The admin provided or imported title of the app. Inherited from mobileApp.")] String DisplayName;
    [Write, Description("The unique identifier for an entity. Read-only. Inherited from mobileApp object.")] String Id;

    [Write, Description("The description of the app. Inherited from mobileApp.")] String Description;
    [Write, Description("The value indicating whether the app is marked as featured by the admin. Inherited from mobileApp.")] Boolean IsFeatured;
    [Write, Description("The privacy statement Url. Inherited from mobileApp.")] String PrivacyInformationUrl;
    [Write, Description("The InformationUrl of the app. Inherited from mobileApp.")] String InformationUrl;
    [Write, Description("Notes for the app. Inherited from mobileApp.")] String Notes;
    [Write, Description("List of Scope Tag IDs for mobile app.")] String RoleScopeTagIds[];
    [Write, Description("Specifies if the EULA is accepted automatically on the end user's device.")] Boolean AutoAcceptEula;
    [Write, Description("The Product IDs that represent the Office 365 Suite SKU, such as 'O365ProPlusRetail' or 'VisioProRetail'.")] String ProductIds[];
    [Write, Description("Indicates whether shared computer activation is used for Office installations.")] Boolean UseSharedComputerActivation;
    [Write, Description("Specifies the update channel for the Office 365 app suite, such as 'Current' or 'Deferred'.")] String UpdateChannel;
    [Write, Description("Specifies the default file format type for Office apps, such as 'OfficeOpenXMLFormat' or 'OfficeOpenDocumentFormat'.")] String OfficeSuiteAppDefaultFileFormat;
    [Write, Description("The architecture of the Office installation (e.g., 'X86', 'X64', or 'Arm64'). Cannot be changed after creation.")] String OfficePlatformArchitecture;
    [Write, Description("Specifies the locales to be installed when the Office 365 apps are deployed. Uses the standard RFC 5646 format (e.g., 'en-US', 'fr-FR').")] String LocalesToInstall[];
    [Write, Description("Specifies the display level of the installation progress for Office apps. Use 'Full' to display the installation UI, or 'None' for a silent installation.")] String InstallProgressDisplayLevel;
    [Write, Description("Indicates whether older versions of Office should be uninstalled when deploying the Office 365 app suite.")] Boolean ShouldUninstallOlderVersionsOfOffice;
    [Write, Description("The specific target version of the Office 365 app suite to be deployed.")] String TargetVersion;
    [Write, Description("The update version in which the target version is available for the Office 365 app suite.")] String UpdateVersion;
    [Write, Description("A base64-encoded XML configuration file that specifies Office ProPlus installation settings. Takes precedence over all other properties. When present, this XML file will be used to create the app.")] String OfficeConfigurationXml;
    [Write, Description("The list of categories for this app."), EmbeddedInstance("MSFT_DeviceManagementMobileAppCategory")] String Categories[];
    [Write, Description("The list of assignments for this app."), EmbeddedInstance("MSFT_DeviceManagementMobileAppAssignment")] String Assignments[];
    [Write, Description("The property that represents the apps excluded from the selected Office 365 Product ID."), EmbeddedInstance("MSFT_DeviceManagementMobileAppExcludedApp")] String ExcludedApps;

    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present", "Absent"}, Values{"Present", "Absent"}] String Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] String Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
