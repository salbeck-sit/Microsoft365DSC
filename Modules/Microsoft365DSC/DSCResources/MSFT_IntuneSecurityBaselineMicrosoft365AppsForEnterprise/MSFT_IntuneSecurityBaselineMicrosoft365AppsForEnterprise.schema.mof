[ClassVersion("1.0.0.0")]
class MSFT_DeviceManagementConfigurationPolicyAssignments
{
    [Write, Description("The type of the target assignment."), ValueMap{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}, Values{"#microsoft.graph.groupAssignmentTarget","#microsoft.graph.allLicensedUsersAssignmentTarget","#microsoft.graph.allDevicesAssignmentTarget","#microsoft.graph.exclusionGroupAssignmentTarget","#microsoft.graph.configurationManagerCollectionAssignmentTarget"}] String dataType;
    [Write, Description("The type of filter of the target assignment i.e. Exclude or Include. Possible values are:none, include, exclude."), ValueMap{"none","include","exclude"}, Values{"none","include","exclude"}] String deviceAndAppManagementAssignmentFilterType;
    [Write, Description("The Id of the filter for the target assignment.")] String deviceAndAppManagementAssignmentFilterId;
    [Write, Description("The group Id that is the target of the assignment.")] String groupId;
    [Write, Description("The group Display Name that is the target of the assignment.")] String groupDisplayName;
    [Write, Description("The collection Id that is the target of the assignment.(ConfigMgr)")] String collectionId;
};

[ClassVersion("1.0.0.0")]
class MSFT_MicrosoftGraphIntuneSettingsCatalogDeviceSettings_IntuneSecurityBaselineMicrosoft365AppsForEnterprise
{
    [Write, Description("Block Flash activation in Office documents (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String Pol_SecGuide_A001_Block_Flash;
    [Write, Description("Block Flash player in Office (Device) - Depends on Pol_SecGuide_A001_Block_Flash (block all flash activation: Block all activation, block embedded flash activation only: Block embedding/linking, allow other activation, allow all flash activation: Allow all activation)"), ValueMap{"block all flash activation", "block embedded flash activation only", "allow all flash activation"}, Values{"block all flash activation", "block embedded flash activation only", "allow all flash activation"}] String Pol_SecGuide_Block_Flash;
    [Write, Description("Restrict legacy JScript execution for Office (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String Pol_SecGuide_Legacy_JScript;
    [Write, Description("PowerPoint: (Device) - Depends on Pol_SecGuide_Legacy_JScript")] SInt32 POL_SG_powerpnt;
    [Write, Description("OneNote: (Device) - Depends on Pol_SecGuide_Legacy_JScript")] SInt32 POL_SG_onenote;
    [Write, Description("Publisher: (Device) - Depends on Pol_SecGuide_Legacy_JScript")] SInt32 POL_SG_mspub;
    [Write, Description("Access: (Device) - Depends on Pol_SecGuide_Legacy_JScript")] SInt32 POL_SG_msaccess;
    [Write, Description("Project: (Device) - Depends on Pol_SecGuide_Legacy_JScript")] SInt32 POL_SG_winproj;
    [Write, Description("Visio: (Device) - Depends on Pol_SecGuide_Legacy_JScript")] SInt32 POL_SG_visio;
    [Write, Description("Outlook: (Device) - Depends on Pol_SecGuide_Legacy_JScript")] SInt32 POL_SG_outlook;
    [Write, Description("Word: (Device) - Depends on Pol_SecGuide_Legacy_JScript")] SInt32 POL_SG_winword;
    [Write, Description("Excel: (Device) - Depends on Pol_SecGuide_Legacy_JScript")] SInt32 POL_SG_excel;
    [Write, Description("Configure SIP security mode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_PolicyEnableSIPHighSecurityMode;
    [Write, Description("Disable HTTP fallback for SIP connection (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_PolicyDisableHttpConnect;
    [Write, Description("Add-on Management (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_AddonManagement;
    [Write, Description("powerpnt.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe17;
    [Write, Description("excel.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe15;
    [Write, Description("visio.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe19;
    [Write, Description("onent.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe26;
    [Write, Description("outlook.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe22;
    [Write, Description("pptview.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe18;
    [Write, Description("winword.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe21;
    [Write, Description("exprwd.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe24;
    [Write, Description("spDesign.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe23;
    [Write, Description("winproj.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe20;
    [Write, Description("groove.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe14;
    [Write, Description("mspub.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe16;
    [Write, Description("mse7.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe27;
    [Write, Description("msaccess.exe (Device) - Depends on L_AddonManagement (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe25;
    [Write, Description("Consistent Mime Handling (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_ConsistentMimeHandling;
    [Write, Description("excel.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe43;
    [Write, Description("spDesign.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe51;
    [Write, Description("onent.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe54;
    [Write, Description("outlook.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe50;
    [Write, Description("pptview.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe46;
    [Write, Description("mspub.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe44;
    [Write, Description("visio.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe47;
    [Write, Description("winproj.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe48;
    [Write, Description("msaccess.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe53;
    [Write, Description("powerpnt.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe45;
    [Write, Description("groove.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe42;
    [Write, Description("mse7.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe55;
    [Write, Description("winword.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe49;
    [Write, Description("exprwd.exe (Device) - Depends on L_ConsistentMimeHandling (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe52;
    [Write, Description("Disable user name and password (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Disableusernameandpassword;
    [Write, Description("excel.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe127;
    [Write, Description("groove.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe126;
    [Write, Description("onent.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe138;
    [Write, Description("mse7.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe139;
    [Write, Description("mspub.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe128;
    [Write, Description("visio.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe131;
    [Write, Description("exprwd.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe136;
    [Write, Description("msaccess.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe137;
    [Write, Description("spDesign.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe135;
    [Write, Description("winword.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe133;
    [Write, Description("powerpnt.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe129;
    [Write, Description("outlook.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe134;
    [Write, Description("winproj.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe132;
    [Write, Description("pptview.exe (Device) - Depends on L_Disableusernameandpassword (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe130;
    [Write, Description("Information Bar (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Informationbar;
    [Write, Description("excel.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe113;
    [Write, Description("mspub.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe114;
    [Write, Description("msaccess.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe123;
    [Write, Description("onent.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe124;
    [Write, Description("outlook.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe120;
    [Write, Description("winproj.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe118;
    [Write, Description("powerpnt.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe115;
    [Write, Description("spDesign.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe121;
    [Write, Description("groove.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe112;
    [Write, Description("visio.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe117;
    [Write, Description("mse7.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe125;
    [Write, Description("winword.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe119;
    [Write, Description("exprwd.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe122;
    [Write, Description("pptview.exe (Device) - Depends on L_Informationbar (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe116;
    [Write, Description("Local Machine Zone Lockdown Security (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_LocalMachineZoneLockdownSecurity;
    [Write, Description("mse7.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe41;
    [Write, Description("powerpnt.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe31;
    [Write, Description("mspub.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe30;
    [Write, Description("outlook.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe36;
    [Write, Description("pptview.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe32;
    [Write, Description("excel.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe29;
    [Write, Description("exprwd.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe38;
    [Write, Description("groove.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe28;
    [Write, Description("winword.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe35;
    [Write, Description("msaccess.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe39;
    [Write, Description("spDesign.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe37;
    [Write, Description("visio.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe33;
    [Write, Description("onent.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe40;
    [Write, Description("winproj.exe (Device) - Depends on L_LocalMachineZoneLockdownSecurity (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe34;
    [Write, Description("Mime Sniffing Safety Feature (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_MimeSniffingSafetyFature;
    [Write, Description("powerpnt.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe59;
    [Write, Description("exprwd.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe66;
    [Write, Description("groove.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe56;
    [Write, Description("visio.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe61;
    [Write, Description("outlook.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe64;
    [Write, Description("mspub.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe58;
    [Write, Description("mse7.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe69;
    [Write, Description("msaccess.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe67;
    [Write, Description("pptview.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe60;
    [Write, Description("winproj.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe62;
    [Write, Description("spDesign.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe65;
    [Write, Description("onent.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe68;
    [Write, Description("winword.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe63;
    [Write, Description("excel.exe (Device) - Depends on L_MimeSniffingSafetyFature (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe57;
    [Write, Description("Navigate URL (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NavigateURL;
    [Write, Description("spDesign.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe177;
    [Write, Description("onent.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe180;
    [Write, Description("pptview.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe172;
    [Write, Description("outlook.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe176;
    [Write, Description("winproj.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe174;
    [Write, Description("msaccess.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe179;
    [Write, Description("winword.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe175;
    [Write, Description("excel.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe169;
    [Write, Description("mspub.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe170;
    [Write, Description("exprwd.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe178;
    [Write, Description("powerpnt.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe171;
    [Write, Description("visio.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe173;
    [Write, Description("mse7.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe181;
    [Write, Description("groove.exe (Device) - Depends on L_NavigateURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe168;
    [Write, Description("Object Caching Protection (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_ObjectCachingProtection;
    [Write, Description("winword.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe77;
    [Write, Description("powerpnt.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe73;
    [Write, Description("spDesign.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe79;
    [Write, Description("mse7.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe83;
    [Write, Description("mspub.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe72;
    [Write, Description("msaccess.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe81;
    [Write, Description("onent.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe82;
    [Write, Description("outlook.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe78;
    [Write, Description("groove.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe70;
    [Write, Description("excel.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe71;
    [Write, Description("visio.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe75;
    [Write, Description("pptview.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe74;
    [Write, Description("winproj.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe76;
    [Write, Description("exprwd.exe (Device) - Depends on L_ObjectCachingProtection (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe80;
    [Write, Description("Protection From Zone Elevation (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_ProtectionFromZoneElevation;
    [Write, Description("mspub.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe100;
    [Write, Description("visio.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe103;
    [Write, Description("powerpnt.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe101;
    [Write, Description("excel.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe99;
    [Write, Description("mse7.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe111;
    [Write, Description("winword.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe105;
    [Write, Description("exprwd.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe108;
    [Write, Description("msaccess.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe109;
    [Write, Description("spDesign.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe107;
    [Write, Description("onent.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe110;
    [Write, Description("pptview.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe102;
    [Write, Description("winproj.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe104;
    [Write, Description("groove.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe98;
    [Write, Description("outlook.exe (Device) - Depends on L_ProtectionFromZoneElevation (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe106;
    [Write, Description("Restrict ActiveX Install (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_RestrictActiveXInstall;
    [Write, Description("mse7.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe;
    [Write, Description("powerpnt.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe;
    [Write, Description("spDesign.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spDesignexe;
    [Write, Description("onent.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe;
    [Write, Description("excel.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe;
    [Write, Description("mspub.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe;
    [Write, Description("visio.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe;
    [Write, Description("exprwd.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe;
    [Write, Description("outlook.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe;
    [Write, Description("pptview.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe;
    [Write, Description("winproj.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe;
    [Write, Description("winword.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe;
    [Write, Description("groove.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe;
    [Write, Description("msaccess.exe (Device) - Depends on L_RestrictActiveXInstall (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe;
    [Write, Description("Restrict File Download (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_RestrictFileDownload;
    [Write, Description("visio.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe5;
    [Write, Description("winproj.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe6;
    [Write, Description("msaccess.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe11;
    [Write, Description("spDesign.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe9;
    [Write, Description("excel.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe1;
    [Write, Description("powerpnt.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe3;
    [Write, Description("mspub.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe2;
    [Write, Description("exprwd.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe10;
    [Write, Description("outlook.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe8;
    [Write, Description("pptview.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe4;
    [Write, Description("winword.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe7;
    [Write, Description("onent.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe12;
    [Write, Description("mse7.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe13;
    [Write, Description("groove.exe (Device) - Depends on L_RestrictFileDownload (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe0;
    [Write, Description("Saved from URL (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_SavedfromURL;
    [Write, Description("pptview.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe158;
    [Write, Description("exprwd.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe164;
    [Write, Description("mse7.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe167;
    [Write, Description("spDesign.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe163;
    [Write, Description("winproj.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe160;
    [Write, Description("mspub.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe156;
    [Write, Description("visio.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe159;
    [Write, Description("winword.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe161;
    [Write, Description("msaccess.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe165;
    [Write, Description("onent.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe166;
    [Write, Description("outlook.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe162;
    [Write, Description("groove.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe154;
    [Write, Description("excel.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe155;
    [Write, Description("powerpnt.exe (Device) - Depends on L_SavedfromURL (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe157;
    [Write, Description("Scripted Window Security Restrictions (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_ScriptedWindowSecurityRestrictions;
    [Write, Description("exprwd.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_exprwdexe94;
    [Write, Description("mse7.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mse7exe97;
    [Write, Description("mspub.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_mspubexe86;
    [Write, Description("outlook.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_outlookexe92;
    [Write, Description("msaccess.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_msaccessexe95;
    [Write, Description("powerpnt.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_powerpntexe87;
    [Write, Description("groove.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_grooveexe84;
    [Write, Description("excel.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_excelexe85;
    [Write, Description("pptview.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_pptviewexe88;
    [Write, Description("spDesign.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_spdesignexe93;
    [Write, Description("visio.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_visioexe89;
    [Write, Description("onent.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_onenoteexe96;
    [Write, Description("winproj.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winprojexe90;
    [Write, Description("winword.exe (Device) - Depends on L_ScriptedWindowSecurityRestrictions (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_winwordexe91;
};

[ClassVersion("1.0.0.0")]
class MSFT_MicrosoftGraphIntuneSettingsCatalogUserSettings_IntuneSecurityBaselineMicrosoft365AppsForEnterprise
{
    [Write, Description("Block macros from running in Office files from the Internet (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftAccess_Security_TrustCenter_L_BlockMacroExecutionFromInternet;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftAccess_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned;
    [Write, Description("Require that application add-ins are signed by Trusted Publisher (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftAccess_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned;
    [Write, Description("Allow Trusted Locations on the network (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftAccess_Security_TrustCenterTrustedLocations_L_AllowTrustedLocationsOnTheNetwork;
    [Write, Description("VBA Macro Notification Settings (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftAccess_Security_TrustCenter_L_VBAWarningsPolicy;
    [Write, Description(" - Depends on MicrosoftAccess_Security_TrustCenter_L_VBAWarningsPolicy (2: Disable all with notification, 3: Disable all except digitally signed macros, 4: Disable all without notification, 1: Enable all macros (not recommended))"), ValueMap{"2", "3", "4", "1"}, Values{"2", "3", "4", "1"}] String MicrosoftAccess_Security_TrustCenter_L_VBAWarningsPolicy_L_Empty;
    [Write, Description("Do not show data extraction options when opening corrupt workbooks (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Donotshowdataextractionoptionswhenopeningcorruptworkbooks;
    [Write, Description("Ask to update automatic links (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Asktoupdateautomaticlinks;
    [Write, Description("Load pictures from Web pages not created in Excel (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_LoadpicturesfromWebpagesnotcreatedinExcel;
    [Write, Description("Disable AutoRepublish (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DisableAutoRepublish;
    [Write, Description("Do not show AutoRepublish warning alert (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DoNotShowAutoRepublishWarningAlert;
    [Write, Description("Force file extension to match file type (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Forcefileextenstionstomatch;
    [Write, Description(" - Depends on L_Forcefileextenstionstomatch (0: Allow different, 1: Allow different, but warn, 2: Always match file type)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_Forcefileextenstionstomatch_L_Empty;
    [Write, Description("Scan encrypted macros in Excel Open XML workbooks (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DeterminewhethertoforceencryptedExcel;
    [Write, Description(" - Depends on L_DeterminewhethertoforceencryptedExcel (0: Scan encrypted macros (default), 1: Scan if anti-virus software available, 2: Load macros without scanning)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_DeterminewhethertoforceencryptedExcelDropID;
    [Write, Description("Block Excel XLL Add-ins that come from an untrusted source (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_BlockXLLFromInternet;
    [Write, Description(" - Depends on L_BlockXLLFromInternet (1: Block, 0: Show Additional Warning, 2: Allow)"), ValueMap{"1", "0", "2"}, Values{"1", "0", "2"}] String L_BlockXLLFromInternetEnum;
    [Write, Description("Block macros from running in Office files from the Internet (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenter_L_BlockMacroExecutionFromInternet;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) (Deprecated) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned;
    [Write, Description("Always prevent untrusted Microsoft Query files from opening (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_EnableBlockUnsecureQueryFiles;
    [Write, Description("dBase III / IV files (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DBaseIIIANDIVFiles;
    [Write, Description("File block setting: (User) - Depends on L_DBaseIIIANDIVFiles (0: Do not block, 2: Open/Save blocked, use open policy)"), ValueMap{"0", "2"}, Values{"0", "2"}] String L_DBaseIIIANDIVFilesDropID;
    [Write, Description("Dif and Sylk files (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DifAndSylkFiles;
    [Write, Description("File block setting: (User) - Depends on L_DifAndSylkFiles (0: Do not block, 1: Save blocked, 2: Open/Save blocked, use open policy)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_DifAndSylkFilesDropID;
    [Write, Description("Excel 2 macrosheets and add-in files (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Excel2MacrosheetsAndAddInFiles;
    [Write, Description("File block setting: (User) - Depends on L_Excel2MacrosheetsAndAddInFiles (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Excel2MacrosheetsAndAddInFilesDropID;
    [Write, Description("Excel 2 worksheets (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Excel2Worksheets;
    [Write, Description("File block setting: (User) - Depends on L_Excel2Worksheets (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Excel2WorksheetsDropID;
    [Write, Description("Excel 3 macrosheets and add-in files (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Excel3MacrosheetsAndAddInFiles;
    [Write, Description("File block setting: (User) - Depends on L_Excel3MacrosheetsAndAddInFiles (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Excel3MacrosheetsAndAddInFilesDropID;
    [Write, Description("Excel 3 worksheets (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Excel3Worksheets;
    [Write, Description("File block setting: (User) - Depends on L_Excel3Worksheets (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Excel3WorksheetsDropID;
    [Write, Description("Excel 4 macrosheets and add-in files (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Excel4MacrosheetsAndAddInFiles;
    [Write, Description("File block setting: (User) - Depends on L_Excel4MacrosheetsAndAddInFiles (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Excel4MacrosheetsAndAddInFilesDropID;
    [Write, Description("Excel 4 workbooks (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Excel4Workbooks;
    [Write, Description("File block setting: (User) - Depends on L_Excel4Workbooks (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Excel4WorkbooksDropID;
    [Write, Description("Excel 4 worksheets (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Excel4Worksheets;
    [Write, Description("File block setting: (User) - Depends on L_Excel4Worksheets (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Excel4WorksheetsDropID;
    [Write, Description("Excel 95 workbooks (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Excel95Workbooks;
    [Write, Description("File block setting: (User) - Depends on L_Excel95Workbooks (0: Do not block, 1: Save blocked, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "1", "2", "3", "4", "5"}, Values{"0", "1", "2", "3", "4", "5"}] String L_Excel95WorkbooksDropID;
    [Write, Description("Excel 95-97 workbooks and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Excel9597WorkbooksAndTemplates;
    [Write, Description("File block setting: (User) - Depends on L_Excel9597WorkbooksAndTemplates (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Excel9597WorkbooksAndTemplatesDropID;
    [Write, Description("Excel 97-2003 workbooks and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Excel972003WorkbooksAndTemplates;
    [Write, Description("File block setting: (User) - Depends on L_Excel972003WorkbooksAndTemplates (0: Do not block, 1: Save blocked, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "1", "2", "3", "4", "5"}, Values{"0", "1", "2", "3", "4", "5"}] String L_Excel972003WorkbooksAndTemplatesDropID;
    [Write, Description("Set default file block behavior (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenterFileBlockSettings_L_SetDefaultFileBlockBehavior;
    [Write, Description(" - Depends on MicrosoftExcel_Security_TrustCenterFileBlockSettings_L_SetDefaultFileBlockBehavior (0: Blocked files are not opened, 1: Blocked files open in Protected View and can not be edited, 2: Blocked files open in Protected View and can be edited)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String MicrosoftExcel_Security_TrustCenterFileBlockSettings_L_SetDefaultFileBlockBehaviorDropID;
    [Write, Description("Web pages and Excel 2003 XML spreadsheets (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_WebPagesAndExcel2003XMLSpreadsheets;
    [Write, Description("File block setting: (User) - Depends on L_WebPagesAndExcel2003XMLSpreadsheets (0: Do not block, 1: Save blocked, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "1", "2", "3", "4", "5"}, Values{"0", "1", "2", "3", "4", "5"}] String L_WebPagesAndExcel2003XMLSpreadsheetsDropID;
    [Write, Description("Prevent Excel from running XLM macros (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_XL4KillSwitchPolicy;
    [Write, Description("Always open untrusted database files in Protected View (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_EnableDataBaseFileProtectedView;
    [Write, Description("Do not open files from the Internet zone in Protected View (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenterProtectedView_L_DoNotOpenFilesFromTheInternetZoneInProtectedView;
    [Write, Description("Do not open files in unsafe locations in Protected View (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenterProtectedView_L_DoNotOpenFilesInUnsafeLocationsInProtectedView;
    [Write, Description("Set document behavior if file validation fails (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFails;
    [Write, Description("Checked: Allow edit.  Unchecked: Do not allow edit. (User) - Depends on MicrosoftExcel_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFails (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFailsStr3;
    [Write, Description(" - Depends on MicrosoftExcel_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFails (0: Block files, 1: Open in Protected View)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFailsDropID;
    [Write, Description("Turn off Protected View for attachments opened from Outlook (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenterProtectedView_L_TurnOffProtectedViewForAttachmentsOpenedFromOutlook;
    [Write, Description("Require that application add-ins are signed by Trusted Publisher (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) - Depends on MicrosoftExcel_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned_v2;
    [Write, Description("Allow Trusted Locations on the network (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenterTrustedLocations_L_AllowTrustedLocationsOnTheNetwork;
    [Write, Description("VBA Macro Notification Settings (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_TrustCenter_L_VBAWarningsPolicy;
    [Write, Description(" - Depends on MicrosoftExcel_Security_TrustCenter_L_VBAWarningsPolicy (2: Disable VBA macros with notification, 3: Disable VBA macros except digitally signed macros, 4: Disable VBA macros without notification, 1: Enable VBA macros (not recommended))"), ValueMap{"2", "3", "4", "1"}, Values{"2", "3", "4", "1"}] String L_empty4;
    [Write, Description("Turn off file validation (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftExcel_Security_L_TurnOffFileValidation;
    [Write, Description("WEBSERVICE Function Notification Settings (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_WebContentWarningLevel;
    [Write, Description(" - Depends on L_WebContentWarningLevel (0: Enable all WEBSERVICE functions (not recommended), 1: Disable all with notification, 2: Disable all without notification)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_WebContentWarningLevelValue;
    [Write, Description("Disable UI extending from documents and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NoExtensibilityCustomizationFromDocumentPolicy;
    [Write, Description("Disallow in Word (User) - Depends on L_NoExtensibilityCustomizationFromDocumentPolicy (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NoExtensibilityCustomizationFromDocumentPolicyWord;
    [Write, Description("Disallow in Excel (User) - Depends on L_NoExtensibilityCustomizationFromDocumentPolicy (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NoExtensibilityCustomizationFromDocumentPolicyExcel;
    [Write, Description("Disallow in Visio (User) - Depends on L_NoExtensibilityCustomizationFromDocumentPolicy (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NoExtensibilityCustomizationFromDocumentPolicyVisio;
    [Write, Description("Disallow in PowerPoint (User) - Depends on L_NoExtensibilityCustomizationFromDocumentPolicy (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NoExtensibilityCustomizationFromDocumentPolicyPowerPoint;
    [Write, Description("Disallow in Publisher (User) - Depends on L_NoExtensibilityCustomizationFromDocumentPolicy (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NoExtensibilityCustomizationFromDocumentPolicyPublisher;
    [Write, Description("Disallow in Outlook (User) - Depends on L_NoExtensibilityCustomizationFromDocumentPolicy (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NoExtensibilityCustomizationFromDocumentPolicyOutlook;
    [Write, Description("Disallow in Project (User) - Depends on L_NoExtensibilityCustomizationFromDocumentPolicy (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NoExtensibilityCustomizationFromDocumentPolicyProject;
    [Write, Description("Disallow in Access (User) - Depends on L_NoExtensibilityCustomizationFromDocumentPolicy (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NoExtensibilityCustomizationFromDocumentPolicyAccess;
    [Write, Description("Disallow in InfoPath (User) - Depends on L_NoExtensibilityCustomizationFromDocumentPolicy (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_NoExtensibilityCustomizationFromDocumentPolicyInfoPath;
    [Write, Description("ActiveX Control Initialization (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_ActiveXControlInitialization;
    [Write, Description("ActiveX Control Initialization: (User) - Depends on L_ActiveXControlInitialization (1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6)"), ValueMap{"1", "2", "3", "4", "5", "6"}, Values{"1", "2", "3", "4", "5", "6"}] String L_ActiveXControlInitializationcolon;
    [Write, Description("Allow Basic Authentication prompts from network proxies (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_BasicAuthProxyBehavior;
    [Write, Description("Allow VBA to load typelib references by path from untrusted intranet locations (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_AllowVbaIntranetRefs;
    [Write, Description("Automation Security (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_AutomationSecurity;
    [Write, Description("Set the Automation Security level (User) - Depends on L_AutomationSecurity (3: Disable macros by default, 2: Use application macro security level, 1: Macros enabled (default))"), ValueMap{"3", "2", "1"}, Values{"3", "2", "1"}] String L_SettheAutomationSecuritylevel;
    [Write, Description("Control how Office handles form-based sign-in prompts (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_AuthenticationFBABehavior;
    [Write, Description("Specify hosts allowed to show form-based sign-in prompts to users: (User) - Depends on L_AuthenticationFBABehavior")] String L_AuthenticationFBAEnabledHostsID;
    [Write, Description("Behavior: (User) - Depends on L_AuthenticationFBABehavior (1: Block all prompts, 2: Ask the user what to do for each new host, 3: Show prompts only from allowed hosts)"), ValueMap{"1", "2", "3"}, Values{"1", "2", "3"}] String L_authenticationFBABehaviorEnum;
    [Write, Description("Disable additional security checks on VBA library references that may refer to unsafe locations on the local machine (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DisableStrictVbaRefsSecurityPolicy;
    [Write, Description("Disable all Trust Bar notifications for security issues (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DisableallTrustBarnotificationsfor;
    [Write, Description("Encryption mode for Information Rights Management (IRM) (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Encryptiontypeforirm;
    [Write, Description("IRM Encryption Mode: (User) - Depends on L_Encryptiontypeforirm (1: Cipher Block Chaining (CBC), 2: Electronic Codebook (ECB))"), ValueMap{"1", "2"}, Values{"1", "2"}] String L_Encryptiontypeforirmcolon;
    [Write, Description("Encryption type for password protected Office 97-2003 files (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Encryptiontypeforpasswordprotectedoffice972003;
    [Write, Description("Encryption type: (User) - Depends on L_Encryptiontypeforpasswordprotectedoffice972003")] String L_encryptiontypecolon318;
    [Write, Description("Encryption type for password protected Office Open XML files (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Encryptiontypeforpasswordprotectedofficeopen;
    [Write, Description("Encryption type: (User) - Depends on L_Encryptiontypeforpasswordprotectedofficeopen")] String L_Encryptiontypecolon;
    [Write, Description("Load Controls in Forms3 (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_LoadControlsinForms3;
    [Write, Description("Load Controls in Forms3: (User) - Depends on L_LoadControlsinForms3 (1: 1, 2: 2, 3: 3, 4: 4)"), ValueMap{"1", "2", "3", "4"}, Values{"1", "2", "3", "4"}] String L_LoadControlsinForms3colon;
    [Write, Description("Macro Runtime Scan Scope (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_MacroRuntimeScanScope;
    [Write, Description(" - Depends on L_MacroRuntimeScanScope (0: Disable for all documents, 1: Enable for low trust documents, 2: Enable for all documents)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_MacroRuntimeScanScopeEnum;
    [Write, Description("Protect document metadata for rights managed Office Open XML Files (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Protectdocumentmetadataforrightsmanaged;
    [Write, Description("Allow mix of policy and user locations (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Allowmixofpolicyanduserlocations;
    [Write, Description("Disable the Office client from polling the SharePoint Server for published links (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DisabletheOfficeclientfrompolling;
    [Write, Description("Disable Smart Document's use of manifests (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DisableSmartDocumentsuseofmanifests;
    [Write, Description("Outlook Security Mode (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_OutlookSecurityMode;
    [Write, Description("Configure Outlook object model prompt when reading address information (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_OOMAddressAccess;
    [Write, Description("Guard behavior: (User) (1: Prompt User, 2: Automatically Approve, 0: Automatically Deny, 3: Prompt user based on computer security)"), ValueMap{"1", "2", "0", "3"}, Values{"1", "2", "0", "3"}] String L_OOMAddressAccess_Setting;
    [Write, Description("Configure Outlook object model prompt when responding to meeting and task requests (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_OOMMeetingTaskRequest;
    [Write, Description("Guard behavior: (User) (1: Prompt User, 2: Automatically Approve, 0: Automatically Deny, 3: Prompt user based on computer security)"), ValueMap{"1", "2", "0", "3"}, Values{"1", "2", "0", "3"}] String L_OOMMeetingTaskRequest_Setting;
    [Write, Description("Configure Outlook object model prompt when sending mail (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_OOMSend;
    [Write, Description("Guard behavior: (User) (1: Prompt User, 2: Automatically Approve, 0: Automatically Deny, 3: Prompt user based on computer security)"), ValueMap{"1", "2", "0", "3"}, Values{"1", "2", "0", "3"}] String L_OOMSend_Setting;
    [Write, Description("Prevent users from customizing attachment security settings (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Preventusersfromcustomizingattachmentsecuritysettings;
    [Write, Description("Retrieving CRLs (Certificate Revocation Lists) (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_RetrievingCRLsCertificateRevocationLists;
    [Write, Description(" (0: Use system Default, 1: When online always retreive the CRL, 2: Never retreive the CRL)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_empty31;
    [Write, Description("Configure Outlook object model prompt When accessing the Formula property of a UserProperty object (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_OOMFormula;
    [Write, Description("Guard behavior: (User) (1: Prompt User, 2: Automatically Approve, 0: Automatically Deny, 3: Prompt user based on computer security)"), ValueMap{"1", "2", "0", "3"}, Values{"1", "2", "0", "3"}] String L_OOMFormula_Setting;
    [Write, Description("Authentication with Exchange Server (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_AuthenticationwithExchangeServer;
    [Write, Description("Select the authentication with Exchange server. (User) (9: Kerberos/NTLM Password Authentication, 16: Kerberos Password Authentication, 10: NTLM Password Authentication, 2147545088: Insert a smart card)"), ValueMap{"9", "16", "10", "2147545088"}, Values{"9", "16", "10", "2147545088"}] String L_SelecttheauthenticationwithExchangeserver;
    [Write, Description("Enable RPC encryption (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_EnableRPCEncryption;
    [Write, Description("Allow hyperlinks in suspected phishing e-mail messages (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Enablelinksinemailmessages;
    [Write, Description("Configure Outlook object model prompt when accessing an address book (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_OOMAddressBook;
    [Write, Description("Guard behavior: (User) (1: Prompt User, 2: Automatically Approve, 0: Automatically Deny, 3: Prompt user based on computer security)"), ValueMap{"1", "2", "0", "3"}, Values{"1", "2", "0", "3"}] String L_OOMAddressBook_Setting;
    [Write, Description("Outlook Security Policy: (User) - Depends on L_OutlookSecurityMode (0: Outlook Default Security, 1: Use Security Form from 'Outlook Security Settings' Public Folder, 2: Use Security Form from 'Outlook 10 Security Settings' Public Folder, 3: Use Outlook Security Group Policy)"), ValueMap{"0", "1", "2", "3"}, Values{"0", "1", "2", "3"}] String L_OutlookSecurityPolicy;
    [Write, Description("Allow users to demote attachments to Level 2 (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_AllowUsersToLowerAttachments;
    [Write, Description("Allow Active X One Off Forms (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_AllowActiveXOneOffForms;
    [Write, Description("Sets which ActiveX controls to allow. (0: Load only Outlook Controls, 1: Allows only Safe Controls, 2: Allows all ActiveX Controls)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_empty29;
    [Write, Description("Allow scripts in one-off Outlook forms (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_EnableScriptsInOneOffForms;
    [Write, Description("Remove file extensions blocked as Level 2 (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Level2RemoveFilePolicy;
    [Write, Description("Removed Extensions: (User)")] String L_removedextensions25;
    [Write, Description("Use Unicode format when dragging e-mail message to file system (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_MSGUnicodeformatwhendraggingtofilesystem;
    [Write, Description("Set Outlook object model custom actions execution prompt (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_OnExecuteCustomActionOOM;
    [Write, Description("When executing a custom action: (User) (1: Prompt User, 2: Automatically Approve, 0: Automatically Deny, 3: Prompt user based on computer security)"), ValueMap{"1", "2", "0", "3"}, Values{"1", "2", "0", "3"}] String L_OnExecuteCustomActionOOM_Setting;
    [Write, Description("Do not allow Outlook object model scripts to run for public folders (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DisableOutlookobjectmodelscriptsforpublicfolders;
    [Write, Description("Include Internet in Safe Zones for Automatic Picture Download (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_BlockInternet;
    [Write, Description("Security setting for macros (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_SecurityLevelOutlook;
    [Write, Description("Security Level (User) (2: Always warn, 4: Never warn, disable all, 3: Warn for signed, disable unsigned, 1: No security check)"), ValueMap{"2", "4", "3", "1"}, Values{"2", "4", "3", "1"}] String L_SecurityLevel;
    [Write, Description("Remove file extensions blocked as Level 1 (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Level1RemoveFilePolicy;
    [Write, Description("Removed Extensions: (User)")] String L_RemovedExtensions;
    [Write, Description("Signature Warning (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_SignatureWarning;
    [Write, Description("Signature Warning (User) (0: Let user decide if they want to be warned, 1: Always warn about invalid signatures, 2: Never warn about invalid signatures)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_signaturewarning30;
    [Write, Description("Display Level 1 attachments (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Level1Attachments;
    [Write, Description("Minimum encryption settings (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Minimumencryptionsettings;
    [Write, Description("Minimum key size (in bits): (User)")] SInt32 L_Minimumkeysizeinbits;
    [Write, Description("Do not allow Outlook object model scripts to run for shared folders (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DisableOutlookobjectmodelscripts;
    [Write, Description("Configure Outlook object model prompt when executing Save As (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_OOMSaveAs;
    [Write, Description("Guard behavior: (User) (1: Prompt User, 2: Automatically Approve, 0: Automatically Deny, 3: Prompt user based on computer security)"), ValueMap{"1", "2", "0", "3"}, Values{"1", "2", "0", "3"}] String L_OOMSaveAs_Setting;
    [Write, Description("Junk E-mail protection level (User) - Depends on L_OutlookSecurityMode (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_JunkEmailprotectionlevel;
    [Write, Description("Select level: (User) (4294967295: No Protection, 6: Low (Default), 3: High, 2147483648: Trusted Lists Only)"), ValueMap{"4294967295", "6", "3", "2147483648"}, Values{"4294967295", "6", "3", "2147483648"}] String L_Selectlevel;
    [Write, Description("Run Programs (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_RunPrograms;
    [Write, Description(" - Depends on L_RunPrograms (0: disable (don't run any programs), 1: enable (prompt user before running), 2: enable all (run without prompting))"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_RunPrograms_L_Empty;
    [Write, Description("Scan encrypted macros in PowerPoint Open XML presentations (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Determinewhethertoforceencryptedppt;
    [Write, Description(" - Depends on L_Determinewhethertoforceencryptedppt (0: Scan encrypted macros (default), 1: Scan if anti-virus software available, 2: Load macros without scanning)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_DeterminewhethertoforceencryptedpptDropID;
    [Write, Description("Block macros from running in Office files from the Internet (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenter_L_BlockMacroExecutionFromInternet;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) (Deprecated) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned;
    [Write, Description("PowerPoint 97-2003 presentations, shows, templates and add-in files (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_PowerPoint972003PresentationsShowsTemplatesandAddInFiles;
    [Write, Description("File block setting: (User) - Depends on L_PowerPoint972003PresentationsShowsTemplatesandAddInFiles (0: Do not block, 1: Save blocked, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "1", "2", "3", "4", "5"}, Values{"0", "1", "2", "3", "4", "5"}] String L_PowerPoint972003PresentationsShowsTemplatesandAddInFilesDropID;
    [Write, Description("Set default file block behavior (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenterFileBlockSettings_L_SetDefaultFileBlockBehavior;
    [Write, Description(" - Depends on MicrosoftPowerPoint_Security_TrustCenterFileBlockSettings_L_SetDefaultFileBlockBehavior (0: Blocked files are not opened, 1: Blocked files open in Protected View and can not be edited, 2: Blocked files open in Protected View and can be edited)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String MicrosoftPowerPoint_Security_TrustCenterFileBlockSettings_L_SetDefaultFileBlockBehaviorDropID;
    [Write, Description("Do not open files from the Internet zone in Protected View (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenterProtectedView_L_DoNotOpenFilesFromTheInternetZoneInProtectedView;
    [Write, Description("Do not open files in unsafe locations in Protected View (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenterProtectedView_L_DoNotOpenFilesInUnsafeLocationsInProtectedView;
    [Write, Description("Set document behavior if file validation fails (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFails;
    [Write, Description("Checked: Allow edit.  Unchecked: Do not allow edit. (User) - Depends on MicrosoftPowerPoint_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFails (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFailsStr3;
    [Write, Description(" - Depends on MicrosoftPowerPoint_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFails (0: Block files, 1: Open in Protected View)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFailsDropID;
    [Write, Description("Turn off Protected View for attachments opened from Outlook (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenterProtectedView_L_TurnOffProtectedViewForAttachmentsOpenedFromOutlook;
    [Write, Description("Require that application add-ins are signed by Trusted Publisher (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) - Depends on MicrosoftPowerPoint_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned_v2;
    [Write, Description("Allow Trusted Locations on the network (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenterTrustedLocations_L_AllowTrustedLocationsOnTheNetwork;
    [Write, Description("VBA Macro Notification Settings (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_TrustCenter_L_VBAWarningsPolicy;
    [Write, Description(" - Depends on MicrosoftPowerPoint_Security_TrustCenter_L_VBAWarningsPolicy (2: Disable all with notification, 3: Disable all except digitally signed macros, 4: Disable all without notification, 1: Enable all macros (not recommended))"), ValueMap{"2", "3", "4", "1"}, Values{"2", "3", "4", "1"}] String L_empty3;
    [Write, Description("Turn off file validation (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPowerPoint_Security_L_TurnOffFileValidation;
    [Write, Description("Allow Trusted Locations on the network (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftProject_Security_TrustCenter_L_AllowTrustedLocationsOnTheNetwork;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) (Deprecated) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftProject_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned;
    [Write, Description("Require that application add-ins are signed by Trusted Publisher (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftProject_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) - Depends on MicrosoftProject_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftProject_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned_v2;
    [Write, Description("VBA Macro Notification Settings (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftProject_Security_TrustCenter_L_VBAWarningsPolicy;
    [Write, Description(" - Depends on MicrosoftProject_Security_TrustCenter_L_VBAWarningsPolicy (2: Disable all with notification, 3: Disable all except digitally signed macros, 4: Disable all without notification, 1: Enable all macros (not recommended))"), ValueMap{"2", "3", "4", "1"}, Values{"2", "3", "4", "1"}] String MicrosoftProject_Security_TrustCenter_L_VBAWarningsPolicy_L_Empty;
    [Write, Description("Publisher Automation Security Level (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_PublisherAutomationSecurityLevel;
    [Write, Description(" - Depends on L_PublisherAutomationSecurityLevel (1: Low (enabled), 2: By UI (prompted), 3: High (disabled))"), ValueMap{"1", "2", "3"}, Values{"1", "2", "3"}] String L_PublisherAutomationSecurityLevel_L_Empty;
    [Write, Description("Block macros from running in Office files from the internet (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPublisherV3_Security_TrustCenter_L_BlockMacroExecutionFromInternet;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins (User) (Deprecated) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPublisherV2_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned;
    [Write, Description("Require that application add-ins are signed by Trusted Publisher (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPublisherV2_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins (User) - Depends on MicrosoftPublisherV2_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPublisherV2_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned_v2;
    [Write, Description("VBA Macro Notification Settings (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftPublisherV2_Security_TrustCenter_L_VBAWarningsPolicy;
    [Write, Description(" - Depends on MicrosoftPublisherV2_Security_TrustCenter_L_VBAWarningsPolicy (2: Disable all with notification, 3: Disable all except digitally signed macros, 4: Disable all without notification, 1: Enable all macros (not recommended))"), ValueMap{"2", "3", "4", "1"}, Values{"2", "3", "4", "1"}] String L_empty0;
    [Write, Description("Allow Trusted Locations on the network (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftVisio_Security_TrustCenter_L_AllowTrustedLocationsOnTheNetwork;
    [Write, Description("Block macros from running in Office files from the Internet (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftVisio_Security_TrustCenter_L_BlockMacroExecutionFromInternet;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) (Deprecated) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftVisio_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned;
    [Write, Description("Visio 2000-2002 Binary Drawings, Templates and Stencils (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Visio2000Files;
    [Write, Description("File block setting: (User) - Depends on L_Visio2000Files (0: Do not block, 2: Open/Save blocked)"), ValueMap{"0", "2"}, Values{"0", "2"}] String L_Visio2000FilesDropID;
    [Write, Description("Visio 2003-2010 Binary Drawings, Templates and Stencils (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Visio2003Files;
    [Write, Description("File block setting: (User) - Depends on L_Visio2003Files (0: Do not block, 1: Save blocked, 2: Open/Save blocked)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_Visio2003FilesDropID;
    [Write, Description("Visio 5.0 or earlier Binary Drawings, Templates and Stencils (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Visio50AndEarlierFiles;
    [Write, Description("File block setting: (User) - Depends on L_Visio50AndEarlierFiles (0: Do not block, 2: Open/Save blocked)"), ValueMap{"0", "2"}, Values{"0", "2"}] String L_Visio50AndEarlierFilesDropID;
    [Write, Description("Require that application add-ins are signed by Trusted Publisher (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftVisio_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) - Depends on MicrosoftVisio_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftVisio_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned_v2;
    [Write, Description("VBA Macro Notification Settings (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftVisio_Security_TrustCenter_L_VBAWarningsPolicy;
    [Write, Description(" - Depends on MicrosoftVisio_Security_TrustCenter_L_VBAWarningsPolicy (2: Disable all with notification, 3: Disable all except digitally signed macros, 4: Disable all without notification, 1: Enable all macros (not recommended))"), ValueMap{"2", "3", "4", "1"}, Values{"2", "3", "4", "1"}] String MicrosoftVisio_Security_TrustCenter_L_VBAWarningsPolicy_L_Empty;
    [Write, Description("Block macros from running in Office files from the Internet (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenter_L_BlockMacroExecutionFromInternet;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) (Deprecated) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned;
    [Write, Description("Dynamic Data Exchange (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_AllowDDE;
    [Write, Description("Dynamic Data Exchange setting (User) - Depends on L_AllowDDE (1: Limited Dynamic Data Exchange, 2: Allow Dynamic Data Exchange)"), ValueMap{"1", "2"}, Values{"1", "2"}] String L_AllowDDEDropID;
    [Write, Description("Set default file block behavior (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenterFileBlockSettings_L_SetDefaultFileBlockBehavior;
    [Write, Description(" - Depends on MicrosoftWord_Security_TrustCenterFileBlockSettings_L_SetDefaultFileBlockBehavior (0: Blocked files are not opened, 1: Blocked files open in Protected View and can not be edited, 2: Blocked files open in Protected View and can be edited)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String MicrosoftWord_Security_TrustCenterFileBlockSettings_L_SetDefaultFileBlockBehaviorDropID;
    [Write, Description("Word 2 and earlier binary documents and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Word2AndEarlierBinaryDocumentsAndTemplates;
    [Write, Description("File block setting: (User) - Depends on L_Word2AndEarlierBinaryDocumentsAndTemplates (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Word2AndEarlierBinaryDocumentsAndTemplatesDropID;
    [Write, Description("Word 2000 binary documents and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Word2000BinaryDocumentsAndTemplates;
    [Write, Description("File block setting: (User) - Depends on L_Word2000BinaryDocumentsAndTemplates (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Word2000BinaryDocumentsAndTemplatesDropID;
    [Write, Description("Word 2003 binary documents and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Word2003BinaryDocumentsAndTemplates;
    [Write, Description("File block setting: (User) - Depends on L_Word2003BinaryDocumentsAndTemplates (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Word2003BinaryDocumentsAndTemplatesDropID;
    [Write, Description("Word 2007 and later binary documents and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Word2007AndLaterBinaryDocumentsAndTemplates;
    [Write, Description("File block setting: (User) - Depends on L_Word2007AndLaterBinaryDocumentsAndTemplates (0: Do not block, 1: Save blocked, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "1", "2", "3", "4", "5"}, Values{"0", "1", "2", "3", "4", "5"}] String L_Word2007AndLaterBinaryDocumentsAndTemplatesDropID;
    [Write, Description("Word 6.0 binary documents and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Word6Pt0BinaryDocumentsAndTemplates;
    [Write, Description("File block setting: (User) - Depends on L_Word6Pt0BinaryDocumentsAndTemplates (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Word6Pt0BinaryDocumentsAndTemplatesDropID;
    [Write, Description("Word 95 binary documents and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Word95BinaryDocumentsAndTemplates;
    [Write, Description("File block setting: (User) - Depends on L_Word95BinaryDocumentsAndTemplates (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Word95BinaryDocumentsAndTemplatesDropID;
    [Write, Description("Word 97 binary documents and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_Word97BinaryDocumentsAndTemplates;
    [Write, Description("File block setting: (User) - Depends on L_Word97BinaryDocumentsAndTemplates (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_Word97BinaryDocumentsAndTemplatesDropID;
    [Write, Description("Word XP binary documents and templates (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_WordXPBinaryDocumentsAndTemplates;
    [Write, Description("File block setting: (User) - Depends on L_WordXPBinaryDocumentsAndTemplates (0: Do not block, 2: Open/Save blocked, use open policy, 3: Block, 4: Open in Protected View, 5: Allow editing and open in Protected View)"), ValueMap{"0", "2", "3", "4", "5"}, Values{"0", "2", "3", "4", "5"}] String L_WordXPBinaryDocumentsAndTemplatesDropID;
    [Write, Description("Do not open files from the Internet zone in Protected View (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenterProtectedView_L_DoNotOpenFilesFromTheInternetZoneInProtectedView;
    [Write, Description("Do not open files in unsafe locations in Protected View (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenterProtectedView_L_DoNotOpenFilesInUnsafeLocationsInProtectedView;
    [Write, Description("Set document behavior if file validation fails (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFails;
    [Write, Description(" - Depends on MicrosoftWord_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFails (0: Block files, 1: Open in Protected View)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFailsDropID;
    [Write, Description("Checked: Allow edit.  Unchecked: Do not allow edit. (User) - Depends on MicrosoftWord_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFails (0: False, 1: True)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenterProtectedView_L_SetDocumentBehaviorIfFileValidationFailsStr3;
    [Write, Description("Turn off Protected View for attachments opened from Outlook (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenterProtectedView_L_TurnOffProtectedViewForAttachmentsOpenedFromOutlook;
    [Write, Description("Require that application add-ins are signed by Trusted Publisher (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned;
    [Write, Description("Disable Trust Bar Notification for unsigned application add-ins and block them (User) - Depends on MicrosoftWord_Security_TrustCenter_L_RequirethatApplicationExtensionsaresigned (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenter_L_DisableTrustBarNotificationforunsigned_v2;
    [Write, Description("Scan encrypted macros in Word Open XML documents (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String L_DeterminewhethertoforceencryptedWord;
    [Write, Description(" - Depends on L_DeterminewhethertoforceencryptedWord (0: Scan encrypted macros (default), 1: Scan if anti-virus software available, 2: Load macros without scanning)"), ValueMap{"0", "1", "2"}, Values{"0", "1", "2"}] String L_DeterminewhethertoforceencryptedWordDropID;
    [Write, Description("VBA Macro Notification Settings (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenter_L_VBAWarningsPolicy;
    [Write, Description(" - Depends on MicrosoftWord_Security_TrustCenter_L_VBAWarningsPolicy (2: Disable all with notification, 3: Disable all except digitally signed macros, 4: Disable all without notification, 1: Enable all macros (not recommended))"), ValueMap{"2", "3", "4", "1"}, Values{"2", "3", "4", "1"}] String L_empty19;
    [Write, Description("Turn off file validation (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_L_TurnOffFileValidation;
    [Write, Description("Allow Trusted Locations on the network (User) (0: Disabled, 1: Enabled)"), ValueMap{"0", "1"}, Values{"0", "1"}] String MicrosoftWord_Security_TrustCenterTrustedLocations_L_AllowTrustedLocationsOnTheNetwork;
};
[ClassVersion("1.0.0.0"), FriendlyName("IntuneSecurityBaselineMicrosoft365AppsForEnterprise")]
class MSFT_IntuneSecurityBaselineMicrosoft365AppsForEnterprise : OMI_BaseResource
{
    [Write, Description("Policy description")] String Description;
    [Key, Description("Policy name")] String DisplayName;
    [Write, Description("List of Scope Tags for this Entity instance.")] String RoleScopeTagIds[];
    [Write, Description("The unique identifier for an entity. Read-only.")] String Id;
    [Write, Description("The policy settings for the device scope"), EmbeddedInstance("MSFT_MicrosoftGraphIntuneSettingsCatalogDeviceSettings_IntuneSecurityBaselineMicrosoft365AppsForEnterprise")] String DeviceSettings;
    [Write, Description("The policy settings for the user scope"), EmbeddedInstance("MSFT_MicrosoftGraphIntuneSettingsCatalogUserSettings_IntuneSecurityBaselineMicrosoft365AppsForEnterprise")] String UserSettings;
    [Write, Description("Represents the assignment to the Intune policy."), EmbeddedInstance("MSFT_DeviceManagementConfigurationPolicyAssignments")] String Assignments[];
    [Write, Description("Present ensures the policy exists, absent ensures it is removed."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] string Ensure;
    [Write, Description("Credentials of the Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Secret of the Azure Active Directory tenant used for authentication."), EmbeddedInstance("MSFT_Credential")] String ApplicationSecret;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Managed ID being used for authentication.")] Boolean ManagedIdentity;
    [Write, Description("Access token used for authentication.")] String AccessTokens[];
};
