[ClassVersion("1.0.0.0"), FriendlyName("SCSecurityFilter")]
class MSFT_SCSecurityFilter : OMI_BaseResource
{
    [Key, Description("The FilterName parameter specifies the name of the compliance security filter that you want to view. If the value contains spaces, enclose the value in quotation marks (\").")] String FilterName;
    [Write, Description("The Action parameter filters the results by the type of search action that a filter is applied to. "),ValueMap{"Export", "Preview", "Purge", "Search", "All"}, Values{"Export", "Preview", "Purge", "Search", "All"}] String Action;
    [Write, Description("The User parameter filters the results by the user who gets a filter applied to their searches. Acceptable values are : The alias or email address of a user, All or The name of a role group")] String Users[];
    [Write, Description("The Description parameter specifies a description for the compliance security filter. The maximum length is 256 characters. If the value contains spaces, enclose the value in quotation marks (\").")] String Description;
    [Write, Description("The Filters parameter specifies the search criteria for the compliance security filter. The filters are applied to the users specified by the Users parameter. You can create three different types of filters: Mailbox filter, Mailbox content filter or Site and site content filter")] String Filters[];
    [Write, Description("The Region parameter specifies the satellite location for multi-geo tenants to conduct eDiscovery searches in."),ValueMap{"APC", "AUS", "CAN", "EUR", "FRA", "GBR", "IND", "JPN", "LAM", "NAM", ""}, Values{"APC", "AUS", "CAN", "EUR", "FRA", "GBR", "IND", "JPN", "LAM", "NAM", ""}] String Region;
    [Write, Description("Credentials of the Exchange Global Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Path to certificate used in service principal usually a PFX file.")] String CertificatePath;
    [Write, Description("Username can be made up to anything but password will be used for CertificatePassword"), EmbeddedInstance("MSFT_Credential")] String CertificatePassword;
    [Write, Description("Specify if this label policy should exist or not."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
};
