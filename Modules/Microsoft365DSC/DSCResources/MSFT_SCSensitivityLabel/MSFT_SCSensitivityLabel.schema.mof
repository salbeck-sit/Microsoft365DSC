[ClassVersion("1.0.0")]
class MSFT_SCLabelSetting
{
    [Write, Description("Advanced settings key.")] String Key;
    [Write, Description("Advanced settings value.")] String Value[];
};
[ClassVersion("1.0.0")]
class MSFT_SCLabelLocaleSettings
{
    [Write, Description("Name of the Local key.")] String localeKey;
    [Write, Description("The locale settings display names."),EmbeddedInstance("MSFT_SCLabelSetting")] String LabelSettings[];
};
[ClassVersion("1.0.0.0"), FriendlyName("SCSensitivityLabel")]
class MSFT_SCSensitivityLabel : OMI_BaseResource
{
    [Key, Description("The Name parameter specifies the unique name for the sensitivity label. The maximum length is 64 characters. If the value contains spaces, enclose the value in quotation marks.")] String Name;
    [Write, Description("Specify if this rule should exist or not."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("The Comment parameter specifies an optional comment.")] String Comment;
    [Write, Description("The AdvancedSettings parameter enables client-specific features and capabilities on the sensitivity label. The settings that you configure with this parameter only affect apps that are designed for the setting."),EmbeddedInstance("MSFT_SCLabelSetting")] String AdvancedSettings[];
    [Write, Description("The DisplayName parameter specifies the display name for the sensitivity label. The display name appears in the Microsoft Office and is used by Outlook users to select the appropriate sensitivity label before they send a message.")] String DisplayName;
    [Write, Description("The LocaleSettings parameter specifies one or more localized label name or label Tooltips in different languages. Regions include all region codes supported in Office Client applications."),EmbeddedInstance("MSFT_SCLabelLocaleSettings")] String LocaleSettings[];
    [Write, Description("The ParentId parameter specifies the parent label that you want this label to be under (a sublabel). You can use any value that uniquely identifies the parent sensitivity label for example name.")] String ParentId;
    [Write, Description("The Priority parameter specifies a priority value for the sensitivity label that determines the order of label processing. A lower integer value indicates a highter priority.")] uint32 Priority;
    [Write, Description("The ToolTip parameter specifies the default tooltip and sensitivity label description that's seen by users. It the value contains spaces, enclose the value in quotation marks.")] String Tooltip;
    [Write, Description("The ApplyContentMarkingFooterAlignment parameter specifies the footer alignment."), ValueMap{"Left","Center","Right"}, Values{"Left","Center","Right"}] String ApplyContentMarkingFooterAlignment;
    [Write, Description("The ApplyContentMarkingFooterEnabled parameter specifies whether to enable or disable the sensitivity label.")] Boolean ApplyContentMarkingFooterEnabled;
    [Write, Description("The ApplyContentMarkingFooterFontColor parameter specifies the color of the footer text. This parameter accepts a hexadecimal color code value in the format #xxxxxx. The default value is #000000.")] String ApplyContentMarkingFooterFontColor;
    [Write, Description("The ApplyContentMarkingFooterFontSize parameter specifies the font size (in points) of the footer text.")] SInt32 ApplyContentMarkingFooterFontSize;
    [Write, Description("The ApplyContentMarkingFooterMargin parameter specifies the size (in points) of the footer margin.")] SInt32 ApplyContentMarkingFooterMargin;
    [Write, Description("The ApplyContentMarkingFooterText parameter specifies the footer text. If the value contains spaces, enclose the value in quotation marks.")] String ApplyContentMarkingFooterText;
    [Write, Description("The ApplyContentMarkingHeaderAlignment parameter specifies the header alignment."), ValueMap{"Left","Center","Right"}, Values{"Left","Center","Right"}] String ApplyContentMarkingHeaderAlignment;
    [Write, Description("The ApplyContentMarkingHeaderEnabled parameter enables or disables the Apply Content Marking Header action for the label.")] Boolean ApplyContentMarkingHeaderEnabled;
    [Write, Description("The ApplyContentMarkingHeaderFontColor parameter specifies the color of the header text. This parameter accepts a hexadecimal color code value in the format #xxxxxx. The default value is #000000.")] String ApplyContentMarkingHeaderFontColor;
    [Write, Description("The ApplyContentMarkingHeaderFontSize parameter specifies the font size (in points) of the header text.")] SInt32 ApplyContentMarkingHeaderFontSize;
    [Write, Description("The ApplyContentMarkingHeaderMargin parameter specifies the size (in points) of the header margin.")] SInt32 ApplyContentMarkingHeaderMargin;
    [Write, Description("The ApplyContentMarkingHeaderText parameter specifies the header text. If the value contains spaces, enclose the value in quotation marks.")] String ApplyContentMarkingHeaderText;
    [Write, Description("The ApplyWaterMarkingEnabled parameter enables or disables the Apply Watermarking Header action for the label.")] Boolean ApplyWaterMarkingEnabled;
    [Write, Description("The ApplyWaterMarkingFontColor parameter specifies the color of the watermark text. This parameter accepts a hexadecimal color code value in the format #xxxxxx.")] String ApplyWaterMarkingFontColor;
    [Write, Description("The ApplyWaterMarkingFontSize parameter specifies the font size (in points) of the watermark text.")] SInt32 ApplyWaterMarkingFontSize;
    [Write, Description("The ApplyWaterMarkingAlignment parameter specifies the watermark alignment."), ValueMap{"Horizontal","Diagonal"}, Values{"Horizontal","Diagonal"}] String ApplyWaterMarkingLayout;
    [Write, Description("The ApplyWaterMarkingText parameter specifies the watermark text. If the value contains spaces, enclose the value in quotation marks.")] String ApplyWaterMarkingText;
    [Write, Description("The ContentType parameter specifies where the sensitivity label can be applied."), ValueMap{"File, Email","Site, UnifiedGroup","PurviewAssets","Teamwork","SchematizedData"}, Values{"File, Email","Site, UnifiedGroup","PurviewAssets","Teamwork","SchematizedData"}] String ContentType[];
    [Write, Description("The EncryptionContentExpiredOnDateInDaysOrNever parameter specifies when the encrypted content expires. Valid values are integer or never.")] String EncryptionContentExpiredOnDateInDaysOrNever;
    [Write, Description("The EncryptionDoNotForward parameter specifies whether the Do Not Forward template is applied.")] Boolean EncryptionDoNotForward;
    [Write, Description("The EncryptionEncryptOnly parameter specifies whether the encrypt-only template is applied.")] Boolean EncryptionEncryptOnly;
    [Write, Description("The EncryptionEnabled parameter specifies whether encryption in enabled.")] Boolean EncryptionEnabled;
    [Write, Description("The EncryptionOfflineAccessDays parameter specifies the number of days that offline access is allowed.")] SInt32 EncryptionOfflineAccessDays;
    [Write, Description("The EncryptionPromptUser parameter specifies whether to set the label with user defined permission in Word, Excel, and PowerPoint.")] Boolean EncryptionPromptUser;
    [Write, Description("The EncryptionProtectionType parameter specifies the protection type for encryption."), ValueMap{"Template","RemoveProtection","UserDefined"}, Values{"Template","RemoveProtection","UserDefined"}] String EncryptionProtectionType;
    [Write, Description("The EncryptionRightsDefinitions parameter specifies the rights users have when accessing protected. This parameter uses the syntax Identity1:Rights1,Rights2;Identity2:Rights3,Rights4. For example, john@contoso.com:VIEW,EDIT;microsoft.com:VIEW.")] String EncryptionRightsDefinitions;
    [Write, Description("The EncryptionRightsUrl parameter specifies the URL for hold your own key (HYOK) protection.")] String EncryptionRightsUrl;
    [Write, Description("The SiteAndGroupProtectionAllowAccessToGuestUsers parameter enables or disables access to guest users.")] Boolean SiteAndGroupProtectionAllowAccessToGuestUsers;
    [Write, Description("The SiteAndGroupProtectionAllowEmailFromGuestUsers parameter enables or disables email from guest users.")] Boolean SiteAndGroupProtectionAllowEmailFromGuestUsers;
    [Write, Description("The SiteAndGroupProtectionAllowFullAccess parameter enables or disables full access.")] Boolean SiteAndGroupProtectionAllowFullAccess;
    [Write, Description("The SiteAndGroupProtectionAllowLimitedAccess parameter enables or disables limited access.")] Boolean SiteAndGroupProtectionAllowLimitedAccess;
    [Write, Description("The SiteAndGroupProtectionBlockAccess parameter blocks access.")] Boolean SiteAndGroupProtectionBlockAccess;
    [Write, Description("The SiteAndGroupProtectionEnabled parameter enables or disables the Site and Group Protection action for the labels.")] Boolean SiteAndGroupProtectionEnabled;
    [Write, Description("The SiteAndGroupProtectionPrivacy parameter specifies the privacy level for the label."), ValueMap{"Public","Private","Unspecified"}, Values{"Public","Private","Unspecified"}] String SiteAndGroupProtectionPrivacy;
    [Write, Description("The SiteAndGroupExternalSharingControlType parameter specifies the external user sharing setting for the label."), ValueMap{"ExternalUserAndGuestSharing","ExternalUserSharingOnly","ExistingExternalUserSharingOnly","Disabled"}, Values{"ExternalUserAndGuestSharing","ExternalUserSharingOnly","ExistingExternalUserSharingOnly","Disabled"}] String SiteAndGroupExternalSharingControlType;
    [Write, Description("Credentials of the Exchange Global Admin"), EmbeddedInstance("MSFT_Credential")] string Credential;
    [Write, Description("Id of the Azure Active Directory application to authenticate with.")] String ApplicationId;
    [Write, Description("Id of the Azure Active Directory tenant used for authentication.")] String TenantId;
    [Write, Description("Thumbprint of the Azure Active Directory application's authentication certificate to use for authentication.")] String CertificateThumbprint;
    [Write, Description("Username can be made up to anything but password will be used for CertificatePassword"), EmbeddedInstance("MSFT_Credential")] String CertificatePassword;
    [Write, Description("Path to certificate used in service principal usually a PFX file.")] String CertificatePath;
};
